b alternate_sum_4_using_c
b ABI.asm:36
r
delete 2
delete [2]
n
n
n
n
n
n
n
n
n
si
n
n
n
b ABI.asm:69
n
n
n
n
n
n
n
n
q
b alternate_sum_4_using_c
b alternate_sum_4_using_c_alternative
run
c
q
b alternate_sum_4_using_c_alternative
run
n
n
n
p
print
n
p
n
p
p $rcx
p *(uint32_t*)$rbp
b lternate_sum_4_using_c_alternative
b alternate_sum_4_using_c_alternative
run
n
n
n
n
p $rcx
p *(uint32_t*)$rbp 
p $rcx -1
q
b alternate_sum_8
run
p $rsp
n
n
p $ecx
p $edi
p$rdi
p $rdi
n
p $rbx
p $ebx
p $ecx
n
p $edi
p $rdi
p 11 - $ebx
q
b product_9_f
run
q
info functions
b main
b main()
b tests_end
q
b main
q
info functions
b main
run 
n
n
n
n
n
n
n
n
n
n
q
info functions
b main
b product_2_f 
run 
c
n
n
p {float}$xmm1
p {int}$xmm1
p $xmm1
p $esi
p {double}$xmm1
n
p $xmm0
q
b product_2_f
run
n
n
p $xmm0
p $xmm1
n
p $xmm1
q
b product_2_f
run
n
n
p $xmm0
q
info functions
b product_2_f 
run
n
n
p {float} $xmm0
p $xmm0
p {v4_float} $xmm0
n
p $esi
n
n
p $xmm0
n
p $esi
n
p $rdi
p 0x00007fffffffd478
q
b product_9_f 
run
n
n
p $xmm0
p $esi
p $edx
p $xmm1
p $ecx
p $xmm2
p $r8d
p $xmm3
p $r9d
p $xmm4
n
p [rbp + 16]
p [$rbp + 16]
info frame
backtrack
backtrace
frame 1
info frame
p ({float} 0x7fffffffd8a0)@2
p ({float} 0x7fffffffd8a0)@7
frame 0
p $xmm0
n
n
n
n
n
n
n
p ($rbp +48)
p {float} ($rbp +48)
p {integer} ($rbp +16)
p {
p $xmm5
p {integer} ($rbp +24)
p {int} ($rbp +24)
p {int} ($rbp +32)
p {int} ($rbp +40)
n
n
n
n
n
n
n
n
n
p $xmm1
n
n
p $xmm9
n
n
n
p $rdx
p $edx
p $xmmp
p {double} $xmm9
p  $xmm9
q
b product_9_f
run
n
b ABI.asm:193
c
n
n
p $esi
p $edx
p $ecx
p $r8d
p $r9d
b ABI.asm:206
c
n
p $esi
p $edx
p $ecx
p $r8d
p $r9d
q
